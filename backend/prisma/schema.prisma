// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role String @default("USER")
  quiz quiz[]
  responses responses[]
  leaderboard leaderboard[]
}

model quiz {
  id Int @id @default(autoincrement())
  title String
  code Int? @unique
  active Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  adminId Int
  admin users @relation(fields: [adminId], references: [id])
  questions questions[]
  leaderboard leaderboard[]
  
}

model questions {
  id Int @id @default(autoincrement())
  title String
  options options[]
  answer String
  score Int @default(1)
  quizId Int
  quiz quiz @relation(fields: [quizId], references: [id])
  responses responses[]
}

model options {
  id Int @id @default(autoincrement())
  title String
  questionId Int
  question questions @relation(fields: [questionId], references: [id])
}

model responses {
  id Int @id @default(autoincrement())
  questionId Int
  question questions @relation(fields: [questionId], references: [id])
  response String
  userId Int
  user users @relation(fields: [userId], references: [id])
}

model leaderboard {
  id Int @id @default(autoincrement())
  userId Int
  name String
  score Int @default(0)
  totalQuestions Int @default(0)
  user users @relation(fields: [userId], references: [id])
  quizId Int
  quiz quiz @relation(fields: [quizId], references: [id])
}